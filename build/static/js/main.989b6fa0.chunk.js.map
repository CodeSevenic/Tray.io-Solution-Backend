{"version":3,"sources":["components/auth/LoginForm.js","components/Loading.js","components/auth/Auth.js","components/svgs.js","components/auth/Login.js","components/auth/RegisterForm.js","components/auth/Register.js","lib/configWindow.js","api/solutions.js","config.js","views/Demo.js","components/SideNav.js","components/View.js","components/Error.js","api/me.js","views/Account.js","components/ConfigWizard.js","lib/authWindow.js","components/Instance.js","views/SolutionsMine.js","views/SolutionsDiscover.js","components/AuthWizard.js","views/Authentications.js","Router.js","index.js","urlConfig.js"],"names":["LoginForm","onLogin","this","props","styles","field","marginTop","btnSpan","marginLeft","loginContainer","backgroundColor","white","minWidth","maxWidth","height","position","top","left","right","margin","paper","padding","overflow","buttonsDiv","textAlign","loginBtn","float","loginHeader","marginBottom","className","style","variant","ref","elem","form","onSubmit","e","preventDefault","username","usernameElem","value","password","passwordElem","inputRef","input","label","placeholder","fullWidth","type","color","React","Component","Loading","spinner","width","display","alignItems","justifyContent","loading","children","auth","isAuthenticated","sessionStorage","getItem","authenticate","cb","console","log","setItem","signout","fetch","method","credentials","then","res","catch","err","PrivateRoute","component","rest","Route","render","Redirect","to","pathname","state","from","location","RedirectMain","MOLogo","xmlns","viewBox","in","values","fill","fillRule","d","transform","MOLogoWhite","Login","redirectToReferrer","login","data","setState","body","JSON","stringify","headers","ok","json","alert","error","src","alt","RegisterForm","onRegister","name","nameElem","autoFocus","required","Register","success","showError","register","response","setTimeout","window","explain","paddingBottom","openConfigWindow","configWindow","open","undefined","configFinished","onmessage","close","postMessage","inProgress","errors","visibleValues","reduce","externalId","configValues","addEventListener","checkWindow","closed","removeEventListener","listSolutions","listSolutionInstances","createSolutionInstance","id","updateSolutionInstance","solutionInstanceId","enabled","updateSolutionInstanceConfig","deleteSolutionInstance","PureComponent","Nav","useState","solutionsOpen","setSolutionsOpen","Link","button","inset","primary","onClick","timeout","unmountOnExit","disablePadding","borderRadius","whiteSpace","View","container","withTheme","msg","listAuths","getAuthEditUrl","authId","getAuthCreateUrl","externalAuthId","Account","email","userInfo","statusText","bold","fontWeight","ConfigWizard","ready","handleIframeEvents","onClose","iframe","createRef","flex","minHeight","border","boxSizing","loadingScreen","bottom","background","title","openAuthWindow","url","authWindow","checkClosedWindow","Instance","instanceState","configWizardSrc","authExternalId","authUrlParams","openWizard","openInIframe","addCustomValidation","popupUrl","onClickConfigure","onClickConfigureWithValidation","onClickConfigureInIframe","onClickEnable","get","onClickDelete","loadAllSolutionInstances","closeIframe","onCreateAuth","handleChange","event","target","controls","pill","marginRight","item","textFields","key","expandIcon","onChange","InputLabelProps","shrink","disabled","SolutionsMine","list","fontFamily","solutionInstances","map","buildList","SolutionsDiscover","solutions","text","grid","header","index","divider","length","secondary","onUseWorkflowClick","AuthWizard","Authentications","headerOptions","headerOption","advancedInput","auths","params","shouldOpenInFrame","iframeURL","loadAuths","openAuthWizard","showAuthWindow","direction","align","control","checked","App","Switch","exact","path","theme","createMuiTheme","palette","blue","ReactDOM","BrowserRouter","document","getElementById","hostname","exports","baseUrl"],"mappings":"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","file":"static/js/main.989b6fa0.chunk.js","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { white } from '@material-ui/core/colors/';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\n\nclass LoginForm extends React.Component {\n  render() {\n    const { onLogin } = this.props;\n    const styles = {\n      field: { marginTop: 10 },\n      btnSpan: { marginLeft: 5 },\n      loginContainer: {\n        backgroundColor: white,\n        minWidth: 320,\n        maxWidth: 400,\n        height: 'auto',\n        position: 'absolute',\n        top: '20%',\n        left: 0,\n        right: 0,\n        margin: 'auto',\n      },\n      paper: {\n        padding: 20,\n        overflow: 'auto',\n      },\n      buttonsDiv: {\n        textAlign: 'center',\n        padding: 10,\n      },\n      loginBtn: {\n        marginTop: 20,\n        float: 'right',\n      },\n      loginHeader: {\n        textAlign: 'center',\n        marginBottom: 15,\n      },\n    };\n\n    return (\n      <div className=\"form-div\">\n        <div style={styles.loginContainer}>\n          <Paper style={styles.paper}>\n            <Typography style={styles.loginHeader} variant=\"headline\">\n              Login to MO Solutions Integration\n            </Typography>\n            <form\n              ref={(elem) => (this.form = elem)}\n              onSubmit={(e) => {\n                e.preventDefault();\n                return onLogin({\n                  username: this.usernameElem.value,\n                  password: this.passwordElem.value,\n                });\n              }}\n            >\n              <Input\n                inputRef={(input) => (this.usernameElem = input)}\n                label=\"Username\"\n                placeholder=\"user\"\n                fullWidth={true}\n              />\n              <Input\n                inputRef={(input) => (this.passwordElem = input)}\n                style={{ marginTop: 10 }}\n                label=\"Password\"\n                placeholder=\"pass\"\n                fullWidth={true}\n                type=\"password\"\n              />\n\n              <Button style={styles.loginBtn} variant=\"outlined\" color=\"primary\" type=\"submit\">\n                Login\n              </Button>\n            </form>\n          </Paper>\n\n          {/* <div style={styles.buttonsDiv}>\n            <Button label=\"Register\" href=\"/register\" icon={<PersonAdd />} color=\"secondary\">\n              Register New Account\n            </Button>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Loading extends React.Component {\n    render() {\n        const styles = {\n            container: {\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }\n        };\n\n        const spinner = (\n            <div style={styles.container}>\n                <CircularProgress/>\n            </div>\n        );\n\n        return this.props.loading ? spinner : this.props.children;\n    }\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { baseUrl } from '../../urlConfig';\nexport const auth = {\n  isAuthenticated: sessionStorage.getItem('userLogged') || false,\n\n  authenticate(cb) {\n    console.log(cb);\n    this.isAuthenticated = true;\n    sessionStorage.setItem('userLogged', true);\n\n    if (typeof cb === 'function') {\n      cb(true);\n    }\n  },\n\n  signout(cb) {\n    fetch(`/api/logout`, { method: 'POST', credentials: 'include' })\n      .then((res) => {\n        this.isAuthenticated = false;\n        if (typeof cb === 'function') {\n          // user was logged out\n          cb(true);\n        }\n      })\n      .catch((err) => {\n        console.log('Error logging out user.');\n        if (typeof cb === 'function') {\n          // user was not logged out\n          cb(false);\n        }\n      });\n  },\n};\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport const RedirectMain = (props) =>\n  auth.isAuthenticated ? (\n    <Redirect {...props} to=\"/solutions/discover\" />\n  ) : (\n    <Redirect {...props} to=\"/login\" />\n  );\n","import React from 'react';\r\n\r\nexport function MOLogo() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"110\"\r\n      height=\"80\"\r\n      className=\"logo-header logo-colour\"\r\n      viewBox=\"0 0 149 110\"\r\n    >\r\n      <defs>\r\n        <filter>\r\n          <feColorMatrix\r\n            in=\"SourceGraphic\"\r\n            values=\"0 0 0 0 0.086275 0 0 0 0 0.105882 0 0 0 0 0.188235 0 0 0 1.000000 0\"\r\n          ></feColorMatrix>\r\n        </filter>\r\n      </defs>\r\n      <g fill=\"#161b30\" fillRule=\"evenodd\">\r\n        <path\r\n          d=\"M170.544 107.346a22.029 22.029 0 01-3.03 8.57 27.357 27.357 0 01-6.039 6.96 29.92 29.92 0 01-5.391 3.542 30.908 30.908 0 01-6.036 2.328 26.56 26.56 0 01-6.364.95c-3.218.081-6.164-.376-8.862-1.37-2.7-1-4.998-2.442-6.912-4.29-1.932-1.801-3.356-3.958-4.313-6.433-.934-2.48-1.285-5.186-1.002-8.121.3-2.95 1.211-5.729 2.694-8.363 1.482-2.63 3.398-5 5.758-7.08a30.043 30.043 0 018.082-5.13 28.167 28.167 0 019.499-2.293c2.224-.132 4.35.012 6.374.403 2.02.412 3.92 1.054 5.65 1.922 1.76.885 3.31 1.954 4.665 3.225a17.19 17.19 0 014.378 6.681c.95 2.58 1.225 5.41.849 8.5\"\r\n          transform=\"translate(-48 -65)\"\r\n        ></path>\r\n        <path\r\n          d=\"M180.2 107.533a32.125 32.125 0 01-2.348 8.491 36.69 36.69 0 01-4.446 7.626 41.408 41.408 0 01-6.025 6.465 40.257 40.257 0 01-7.436 5.094c-2.627 1.422-5.392 2.506-8.297 3.3a37.57 37.57 0 01-8.878 1.309c-2.983.069-5.808-.218-8.466-.849-2.688-.638-5.145-1.56-7.39-2.821a32.35 32.35 0 01-1.932-1.19c.507 2.692 1.007 5.387 1.538 8.068-3.318.08-6.619.161-9.898.235-1.515-7.837-3.038-15.72-4.576-23.666-.804-4.124-1.618-8.27-2.415-12.43-2.116 4.798-4.226 9.582-6.28 14.302-2.053 4.695-4.105 9.348-6.115 13.96-1.727.491-3.478.977-5.183 1.457-7.064-6.054-14.097-12.112-21.12-18.142 1.785 8.562 3.58 17.043 5.354 25.484-3.12.072-6.208.152-9.285.218a7097.63 7097.63 0 01-4.31-20.057c-1.438-6.744-2.9-13.556-4.345-20.379a967.82 967.82 0 007.242-2.28c8.876 7.528 17.774 15.08 26.724 22.656 2.54-5.846 5.12-11.79 7.712-17.747a19337.8 19337.8 0 017.985-18.287c2.54-.8 5.086-1.6 7.65-2.412.579 3.014 1.144 6.016 1.72 9.013.16.873.322 1.734.49 2.596.508-.9 1.039-1.782 1.637-2.641a39.914 39.914 0 015.62-6.633 41.063 41.063 0 017.126-5.4 41.078 41.078 0 018.29-3.795 38.314 38.314 0 019.07-1.785c3.154-.185 6.16-.012 8.986.57 2.837.59 5.464 1.524 7.864 2.773 2.426 1.275 4.587 2.832 6.453 4.678a26.043 26.043 0 014.55 6.251 26.242 26.242 0 012.564 7.507c.494 2.684.54 5.497.17 8.46m-2.913-31.913c-13.603-7.877-33.218-11.873-54.332-10.27-21.117 1.615-39.533 8.2-52.976 17.41-13.085 8.956-21.315 20.522-21.94 32.451-.626 11.927 6.266 22.225 17.963 29.576 11.798 7.42 38.078 11.784 48.406 11.651 1.304-.018 2.307-.027 3.075-.04.008-.009.012-.023.023-.035-.1-.003-.116-.009.01-.009l-.01.009c.617.015 4.565-.025-.023.036-4.657 6.287-9.25 12.49-13.761 18.602 9.465-4.693 19.13-9.48 28.96-14.36 10.031-4.979 20.27-10.066 30.705-15.246h-.013c9.071-4.348 16.89-9.8 22.695-15.99 5.89-6.29 9.303-10.334 10.75-20.725 1.443-10.384-5.8-25.105-19.532-33.06\"\r\n          transform=\"translate(-48 -65)\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function MOLogoWhite() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"110\"\r\n      height=\"80\"\r\n      className=\"logo-header logo-white\"\r\n      viewBox=\"0 0 149 110\"\r\n    >\r\n      <g fill=\"#FFF\" fillRule=\"evenodd\">\r\n        <path d=\"M122.544 42.346a22.029 22.029 0 01-3.03 8.57 27.357 27.357 0 01-6.039 6.96 29.92 29.92 0 01-5.391 3.542 30.908 30.908 0 01-6.036 2.328 26.56 26.56 0 01-6.364.95c-3.218.081-6.164-.376-8.862-1.37-2.7-1-4.998-2.442-6.912-4.29-1.932-1.801-3.356-3.958-4.313-6.433-.934-2.48-1.285-5.186-1.002-8.121.3-2.95 1.211-5.729 2.694-8.363 1.482-2.63 3.398-5 5.758-7.08a30.043 30.043 0 018.082-5.13 28.167 28.167 0 019.499-2.293c2.224-.132 4.35.012 6.374.403 2.02.412 3.92 1.054 5.65 1.922 1.76.885 3.31 1.954 4.665 3.225a17.19 17.19 0 014.378 6.681c.95 2.58 1.225 5.41.849 8.5\"></path>\r\n        <path d=\"M132.2 42.533a32.125 32.125 0 01-2.348 8.491 36.69 36.69 0 01-4.446 7.626 41.408 41.408 0 01-6.025 6.465 40.257 40.257 0 01-7.436 5.094c-2.627 1.422-5.392 2.506-8.297 3.3a37.57 37.57 0 01-8.878 1.309c-2.983.069-5.808-.218-8.466-.849-2.688-.638-5.145-1.56-7.39-2.821a32.35 32.35 0 01-1.932-1.19c.507 2.692 1.007 5.387 1.538 8.068-3.318.08-6.619.161-9.898.235-1.515-7.837-3.038-15.72-4.576-23.666-.804-4.124-1.618-8.27-2.415-12.43-2.116 4.798-4.226 9.582-6.28 14.302-2.053 4.695-4.105 9.348-6.115 13.96-1.727.491-3.478.977-5.183 1.457-7.064-6.054-14.097-12.112-21.12-18.142 1.785 8.562 3.58 17.043 5.354 25.484-3.12.072-6.208.152-9.285.218a7097.63 7097.63 0 01-4.31-20.057c-1.438-6.744-2.9-13.556-4.345-20.379a967.82 967.82 0 007.242-2.28c8.876 7.528 17.774 15.08 26.724 22.656 2.54-5.846 5.12-11.79 7.712-17.747A19337.8 19337.8 0 0160.01 23.35c2.54-.8 5.086-1.6 7.65-2.412.579 3.014 1.144 6.016 1.72 9.013.16.873.322 1.734.49 2.596.508-.9 1.039-1.782 1.637-2.641a39.914 39.914 0 015.62-6.633 41.063 41.063 0 017.126-5.4 41.078 41.078 0 018.29-3.795 38.314 38.314 0 019.07-1.785c3.154-.185 6.16-.012 8.986.57 2.837.59 5.464 1.524 7.864 2.773 2.426 1.275 4.587 2.832 6.453 4.678a26.043 26.043 0 014.55 6.251 26.242 26.242 0 012.564 7.507c.494 2.684.54 5.497.17 8.46m-2.913-31.913C115.684 2.742 96.07-1.254 74.955.349c-21.117 1.615-39.533 8.2-52.976 17.41C8.894 26.714.664 38.28.039 50.21c-.626 11.927 6.266 22.225 17.963 29.576C29.8 87.206 56.08 91.57 66.408 91.437c1.304-.018 2.307-.027 3.075-.04.008-.009.012-.023.023-.035-.1-.003-.116-.009.01-.009l-.01.009c.617.015 4.565-.025-.023.036-4.657 6.287-9.25 12.49-13.761 18.602 9.465-4.693 19.13-9.48 28.96-14.36 10.031-4.979 20.27-10.066 30.705-15.246h-.013c9.071-4.348 16.89-9.8 22.695-15.99 5.89-6.29 9.303-10.334 10.75-20.725 1.443-10.384-5.8-25.105-19.532-33.06\"></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\nimport LoginForm from './LoginForm';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../Loading';\nimport { auth } from './Auth';\nimport { MOLogo } from '../svgs';\nimport { baseUrl } from '../../urlConfig';\n\nexport default class Login extends React.Component {\n  state = {\n    loading: false,\n    redirectToReferrer: false,\n  };\n\n  login = (data) => {\n    console.log(data);\n    console.log('Logging in ' + data.username);\n    this.setState({\n      loading: true,\n    });\n    fetch(`/api/login`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          auth.authenticate(() => {\n            this.setState({\n              redirectToReferrer: true,\n              loading: false,\n            });\n          });\n        } else {\n          res.json().then((body) => {\n            console.log(body);\n            alert(`Unable to login: ${body.error}`);\n            this.setState({\n              loading: false,\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.error('Error logging in.', err);\n      });\n  };\n\n  render() {\n    const style = {\n      container: {\n        height: '300px',\n      },\n      warning: {\n        textAlign: 'center',\n        border: 'none',\n      },\n    };\n\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div className=\"login-form\">\n        <div className=\"form-wrapper\">\n          <div className=\"logo-wrapper\">\n            <MOLogo />\n          </div>\n          <Loading loading={this.state.loading}>\n            <LoginForm onLogin={this.login} />\n          </Loading>\n        </div>\n        <div className=\"left-content\">\n          <div className=\"text-stripe\">\n            <div className=\"logo-vertical\">\n              <img src=\"/MO-secondary-logo-colour.webp\" alt=\"Logo Vertical\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { white } from '@material-ui/core/colors/';\nimport Input from '@material-ui/core/Input';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass RegisterForm extends React.Component {\n  render() {\n    const { onRegister } = this.props;\n    const styles = {\n      loginContainer: {\n        backgroundColor: white,\n        minWidth: 320,\n        maxWidth: 400,\n        height: 'auto',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        margin: '30px auto',\n      },\n      paper: {\n        padding: 20,\n        overflow: 'auto',\n      },\n      buttonsDiv: {\n        textAlign: 'center',\n        padding: 10,\n      },\n      field: {\n        marginTop: 10,\n      },\n      loginBtn: {\n        marginTop: 20,\n        float: 'right',\n      },\n      btnSpan: {\n        marginLeft: 5,\n      },\n    };\n\n    return (\n      <div className=\"register-form\">\n        <div className=\"register-form-wrapper\" style={styles.loginContainer}>\n          <Paper style={styles.paper}>\n            {this.props.loading ? (\n              <div style={{ textAlign: 'center' }}>\n                <CircularProgress />\n              </div>\n            ) : (\n              <form\n                ref={(elem) => (this.form = elem)}\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  return onRegister({\n                    name: this.nameElem.value,\n                    username: this.usernameElem.value,\n                    password: this.passwordElem.value,\n                  });\n                }}\n              >\n                <h3 style={{ textAlign: 'center' }}> New User Form </h3>\n\n                <Input\n                  inputRef={(input) => (this.nameElem = input)}\n                  autoFocus={true}\n                  label=\"Name\"\n                  placeholder=\"Full Name\"\n                  fullWidth={true}\n                  style={{ marginBottom: 10 }}\n                  required\n                />\n\n                <Input\n                  inputRef={(input) => (this.usernameElem = input)}\n                  label=\"Username\"\n                  placeholder=\"Username\"\n                  fullWidth={true}\n                  style={{ marginBottom: 10 }}\n                  required\n                />\n\n                <Input\n                  inputRef={(input) => (this.passwordElem = input)}\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  fullWidth={true}\n                  type=\"password\"\n                  required\n                />\n\n                <Button style={styles.loginBtn} variant=\"raised\" color=\"primary\" type=\"submit\">\n                  Register User\n                </Button>\n              </form>\n            )}\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from 'react';\nimport { baseUrl } from '../../urlConfig';\nimport { MOLogo } from '../svgs';\nimport RegisterForm from './RegisterForm';\n\nexport default class Register extends React.Component {\n  state = {\n    redirectToReferrer: false,\n    error: false,\n    success: false,\n    loading: false,\n  };\n\n  showError = () =>\n    this.setState({\n      error: true,\n      loading: false,\n    });\n\n  register = (data) => {\n    this.setState({\n      loading: true,\n    });\n    fetch(`/api/register`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n    })\n      .then((response) => {\n        if (response.ok) {\n          this.setState({\n            success: true,\n            loading: false,\n          });\n\n          setTimeout(() => (window.location = '/login'), 1000);\n        } else {\n          this.showError();\n        }\n      })\n      .catch((err) => {\n        this.showError();\n      });\n  };\n\n  explain =\n    'This will create a new in-memory user account in the local Express backend that will persist until the backend is restarted.';\n\n  render() {\n    return (\n      <div className=\"register-component\">\n        <div className=\"form-wrapper\">\n          <div className=\"logo-wrapper\">\n            <MOLogo />\n          </div>\n          <div className=\"form-content\">\n            <h1 style={{ textAlign: 'center' }}>Register a New User</h1>\n            <div\n              style={{\n                textAlign: 'center',\n                width: '500px',\n                margin: 'auto',\n                paddingBottom: '10px',\n              }}\n            >\n              {this.explain}\n            </div>\n\n            {this.state.error ? (\n              <h3 style={{ color: 'red', textAlign: 'center' }}>Registration failed</h3>\n            ) : (\n              ''\n            )}\n            {this.state.success ? (\n              <h3 style={{ color: 'green', textAlign: 'center' }}>Registration success</h3>\n            ) : (\n              ''\n            )}\n            <RegisterForm onRegister={this.register} loading={this.state.loading} />\n          </div>\n        </div>\n        <div className=\"left-content\">\n          <div className=\"text-stripe\">\n            <div className=\"logo-vertical\">\n              <img src=\"/MO-secondary-logo-colour.webp\" alt=\"Logo Vertical\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export const openConfigWindow = () => {\n    // Must open window from user interaction code otherwise it is likely\n    // to be blocked by a popup blocker:\n    const configWindow = window.open(\n        undefined,\n        '_blank',\n        'width=500,height=500,scrollbars=no',\n    );\n\n    // Listen to popup messages\n    let configFinished = false;\n    const onmessage = e => {\n        console.log('message', e.data.type, e.data);\n\n        if (e.data.type === 'tray.configPopup.error') {\n            // Handle popup error message\n            alert(`Error: ${e.data.err}`);\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.cancel') {\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.finish') {\n            // Handle popup finish message\n            configFinished = true;\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.validate') {\n            // Return validation in progress\n            configWindow.postMessage({\n                type: 'tray.configPopup.client.validation',\n                data: {\n                    inProgress: true,\n                }\n            }, '*');\n\n            setTimeout(() => {\n                    // Add errors to all inputs\n                    const errors = e.data.data.visibleValues.reduce(\n                        (errors, externalId) => {\n                            console.log(`Visible ${externalId} value:`, e.data.data.configValues[externalId]);\n                            // Uncomment next line to set an error message\n                            // errors[externalId] = 'Custom error message';\n                            return errors;\n                        },\n                        {}\n                    );\n\n                    // Return validation\n                    configWindow.postMessage({\n                        type: 'tray.configPopup.client.validation',\n                        data: {\n                            inProgress: false,\n                            errors: errors,\n                        }\n                    }, '*');\n                },\n                2000\n            );\n        }\n    };\n    window.addEventListener('message', onmessage);\n\n    // Check if popup window has been closed before finishing the configuration.\n    // We use a polling function due to the fact that some browsers may not\n    // display prompts created in the beforeunload event handler.\n    const CHECK_TIMEOUT = 1000;\n    const checkWindow = () => {\n        if (configWindow.closed) {\n            // Handle popup closing\n            if (!configFinished) {\n                alert('Configuration not finished');\n            } else {\n                alert(\n                    'Configuration finished. You can enable the new ' +\n                    'solution instance from the \"Solutions > My Instances\" section'\n                );\n                console.log('Configuration finished');\n            }\n            window.removeEventListener('message', onmessage);\n        } else {\n            setTimeout(checkWindow, CHECK_TIMEOUT);\n        }\n    }\n\n    checkWindow();\n\n    return configWindow;\n};\n","export const listSolutions = () =>\n  fetch(`/api/solutions`, { credentials: 'include' }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n\nexport const listSolutionInstances = () =>\n  fetch(`/api/solutionInstances`, { credentials: 'include' }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n\nexport const createSolutionInstance = (id, name) =>\n  fetch(`/api/solutionInstances`, {\n    body: JSON.stringify({\n      id: id,\n      name: name,\n    }),\n    headers: {\n      'content-type': 'application/json',\n    },\n    method: 'POST',\n    credentials: 'include',\n  }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n\nexport const updateSolutionInstance = (solutionInstanceId, enabled) =>\n  fetch(`/api/solutionInstance/${solutionInstanceId}`, {\n    method: 'PATCH',\n    credentials: 'include',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      enabled: enabled,\n    }),\n  }).then(async (res) => ({\n    ok: res.ok,\n  }));\n\nexport const updateSolutionInstanceConfig = (solutionInstanceId) =>\n  fetch(`/api/solutionInstance/${solutionInstanceId}/config`, {\n    method: 'PATCH',\n    credentials: 'include',\n  }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n\nexport const getSolutionInstance = (id) =>\n  fetch(`/api/solutionInstance/${id}`, {\n    credentials: 'include',\n  }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n\nexport const deleteSolutionInstance = (id) =>\n  fetch(`/api/solutionInstance/${id}`, {\n    method: 'DELETE',\n    credentials: 'include',\n  }).then(async (res) => ({\n    ok: res.ok,\n  }));\n","export default {\n    username: 'a',\n    password: 'a',\n};\n","import React from 'react';\nimport Loading from '../components/Loading';\n\n// Update to use Solutions\nimport { openConfigWindow } from '../lib/configWindow';\n// Add ability to remove solution instance\nimport {\n  listSolutions,\n  listSolutionInstances,\n  createSolutionInstance,\n  deleteSolutionInstance,\n  updateSolutionInstanceConfig,\n} from '../api/solutions';\n\nimport './demo.css';\n\nimport config from '../config.js';\nimport { baseUrl } from '../urlConfig';\n\nexport class Demo extends React.PureComponent {\n  state = {\n    solutions: null,\n    instances: null,\n    loadinginstances: true,\n    loadingSolutions: true,\n  };\n\n  componentDidMount() {\n    fetch(`/api/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        username: config.username,\n        password: config.password,\n      }),\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then(() => {\n      this.listSolutions();\n      this.listInstances();\n    });\n  }\n\n  calculateInstancesSize() {\n    if (!this.state.instances || !this.state.instances.length) {\n      return 0;\n    }\n\n    return 40 + this.state.instances.length * 18;\n  }\n\n  calculateSolutionSize() {\n    if (!this.state.solutions || !this.state.solutions.length) {\n      return 0;\n    }\n\n    return this.state.solutions.length * 30;\n  }\n\n  calculateSize() {\n    const standardContentHeight = 139;\n    return standardContentHeight + this.calculateInstancesSize() + this.calculateSolutionSize();\n  }\n\n  listSolutions = () => {\n    listSolutions().then(({ body }) => {\n      this.setState({ solutions: body.data, loadingSolutions: false });\n    });\n  };\n\n  listInstances = () => {\n    listSolutionInstances().then(({ body }) => {\n      this.setState({ instances: body.data, loadinginstances: false });\n    });\n  };\n\n  onClickActivateIntegration = (id, title) => {\n    const configWindow = openConfigWindow();\n\n    createSolutionInstance(id, title).then(({ body }) => {\n      // After we generate the popup URL, set it to the previously opened\n      // window:\n      configWindow.location = body.data.popupUrl;\n      this.listInstances();\n    });\n  };\n\n  onClickDeactivateIntegration = (id) => {\n    deleteSolutionInstance(id).then(this.listInstances);\n  };\n\n  onReconfigureIntegration = (id) => {\n    const configWindow = openConfigWindow();\n\n    updateSolutionInstanceConfig(id).then(({ body }) => {\n      // After we generate the popup URL, set it to the previously opened\n      // window:\n      configWindow.location = body.data.popupUrl;\n    });\n  };\n\n  renderSolutions() {\n    return (\n      this.state.solutions &&\n      this.state.solutions.map((i) => {\n        return (\n          <div className=\"integration-container\">\n            <button className=\"integration-name\">{i.title}</button>\n            <span\n              className=\"activate\"\n              onClick={() => this.onClickActivateIntegration(i.id, i.title)}\n            >\n              Activate\n            </span>\n          </div>\n        );\n      })\n    );\n  }\n\n  renderInstances() {\n    if (!this.state.instances || !this.state.instances.length) return null;\n\n    return (\n      <div className=\"workflow-container\">\n        <div className=\"workflow-header\">\n          <h3 className=\"app-name\">App Name</h3>\n        </div>\n\n        {this.state.instances.map((w) => {\n          return (\n            <div className=\"workflow-container\">\n              <button>{w.name}</button>\n              <button\n                className=\"deactivate\"\n                onClick={() => this.onClickDeactivateIntegration(w.id)}\n              >\n                Delete\n              </button>\n              <button className=\"reconfigure\" onClick={() => this.onReconfigureIntegration(w.id)}>\n                Reconfigure\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    window.parent.postMessage(\n      {\n        type: 'tray_demo_size',\n        height: this.calculateSize() + 'px',\n      },\n      '*'\n    );\n\n    return (\n      <Loading loading={this.state.loadinginstances && this.state.loadingSolutions}>\n        <div className=\"demo-container\">\n          <div>\n            <h2 className=\"header\">Available Integrations</h2>\n            {this.renderSolutions()}\n          </div>\n          <div>\n            <h2 className=\"header\">Active Integrations</h2>\n\n            {this.state.instances && this.state.instances.length ? (\n              <p>\n                You have authorized the following applications with <button>Asana Connect</button>.\n              </p>\n            ) : (\n              <p>\n                Applications you authorize with <button>Asana Connect</button> will appear here.\n              </p>\n            )}\n\n            {this.renderInstances()}\n          </div>\n          <div className=\"footer\">\n            <button>Manage Developer Apps</button>\n          </div>\n        </div>\n      </Loading>\n    );\n  }\n}\n\nexport default Demo;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport PlugIcon from '@material-ui/icons/SettingsInputComponent';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport CircleIcon from '@material-ui/icons/FiberManualRecord';\nimport { Link } from 'react-router-dom';\nimport './SideNav.css';\n\nconst Nav = () => {\n  const [solutionsOpen, setSolutionsOpen] = useState(true);\n\n  const handleSolutionsClick = () => {\n    setSolutionsOpen(!solutionsOpen);\n  };\n\n  return (\n    <div className=\"sideNav-wrapper\">\n      <div className=\"root\">\n        <List component=\"nav\">\n          <Link to=\"/account\" className=\"link\">\n            <ListItem button>\n              <ListItemIcon>\n                <AccountIcon />\n              </ListItemIcon>\n              <ListItemText inset primary=\"Account\" />\n            </ListItem>\n          </Link>\n\n          <Link to=\"/authentications\" className=\"link\">\n            <ListItem button>\n              <ListItemIcon>\n                <AccountBox />\n              </ListItemIcon>\n              <ListItemText inset primary=\"Authentications\" />\n            </ListItem>\n          </Link>\n\n          <ListItem button onClick={handleSolutionsClick}>\n            <ListItemIcon>\n              <PlugIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Solutions\" />\n            {solutionsOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n\n          <Collapse in={solutionsOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <Link className=\"link\" to=\"/solutions/mine\">\n                <ListItem button className=\"nested\">\n                  <ListItemIcon>\n                    <CircleIcon style={{ borderRadius: 20 }} />\n                  </ListItemIcon>\n                  <ListItemText inset primary=\"My Instances\" style={{ whiteSpace: 'nowrap' }} />\n                </ListItem>\n              </Link>\n\n              <Link className=\"link\" to=\"/solutions/discover\">\n                <ListItem button className=\"nested\">\n                  <ListItemIcon>\n                    <CircleIcon style={{ borderRadius: 20 }} />\n                  </ListItemIcon>\n                  <ListItemText inset primary=\"Discover\" />\n                </ListItem>\n              </Link>\n            </List>\n          </Collapse>\n        </List>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport SideNav from './SideNav';\n// import { withTheme } from '@material-ui/core/styles';\nimport { MOLogoWhite } from './svgs';\nimport './View.css';\n\nconst View = ({ children }) => {\n  return (\n    <div className=\"view-container\">\n      <header className=\"header header-bar\">\n        <div className=\"header-logo\">\n          <MOLogoWhite />\n        </div>\n        <h1>MO Solutions</h1>\n      </header>\n      <div className=\"container\">\n        <SideNav />\n        <div className=\"content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport {withTheme} from '@material-ui/core/styles';\n\nconst styles = {\n    container: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: \"crimson\",\n        padding: '0 20px',\n    }\n};\n\nconst Error = ({msg}) => (\n    <div style={styles.container}>\n        <div>{JSON.stringify(msg, null, 4)}</div>\n    </div>\n);\n\nexport default withTheme()(Error);","import { baseUrl } from '../urlConfig';\n\nexport const me = () =>\n  fetch(`/api/me`, { credentials: 'include' }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n    statusText: res.statusText,\n  }));\n\nexport const listAuths = () =>\n  fetch(`/api/auths`, { credentials: 'include' }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n\nexport const getAuthEditUrl = (authId) =>\n  fetch(`/api/auth`, {\n    body: JSON.stringify({\n      authId,\n    }),\n    headers: {\n      'content-type': 'application/json',\n    },\n    method: 'POST',\n    credentials: 'include',\n  }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n\nexport const getAuthCreateUrl = (solutionInstanceId, externalAuthId) =>\n  fetch(`/api/auth/create`, {\n    body: JSON.stringify({\n      solutionInstanceId,\n      externalAuthId,\n    }),\n    headers: {\n      'content-type': 'application/json',\n    },\n    method: 'POST',\n    credentials: 'include',\n  }).then(async (res) => ({\n    ok: res.ok,\n    body: await res.json(),\n  }));\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from '../components/Loading';\n\nimport { me } from '../api/me';\n\nexport class Account extends React.PureComponent {\n\n    state = {\n        loading: true,\n        error: false,\n        email: '',\n        username: '',\n        userInfo: {},\n    }\n\n    componentDidMount() {\n        me().then(({ok, body, statusText}) => {\n            if (ok) {\n                this.setState({\n                    username: body.username,\n                    email: body.email,\n                    loading: false,\n                });\n            } else {\n                this.setState({\n                    error: statusText,\n                    loading: false,\n                });\n            }\n        });\n    }\n\n    render() {\n        const style = {\n            bold: {\n                fontWeight: 'bold'\n            },\n        };\n\n        return (\n            <View>\n                <Loading loading={this.state.loading}>\n                    {this.state.error ?\n                        <Error msg={this.state.error}/> :\n                        <div>\n                            <Typography variant=\"headline\" style={{margin: \"20px\"}}>\n                                Your Tray account\n                            </Typography>\n                            <div style={{padding: \"10px\"}}>\n                                <div>\n                                    <span style={style.bold}>Tray username: </span>\n                                    {this.state.username}\n                                </div>\n                                <div>\n                                    <span style={style.bold}>Tray email: </span>\n                                    {this.state.email}\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </Loading>\n            </View>\n        );\n    }\n}\n\nexport default Account;\n","import {withTheme} from \"@material-ui/core/styles/index\";\nimport React from 'react';\n\nexport class ConfigWizard extends React.PureComponent {\n    state = {\n        ready: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.iframe = React.createRef();\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"message\", this.handleIframeEvents);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"message\", this.handleIframeEvents);\n    }\n\n    handleIframeEvents = (e) => {\n        console.log(`${e.data.type} event received`);\n        // Here we should handle all event types\n        if (e.data.type === 'tray.configPopup.error') {\n            alert(`Error: ${e.data.err}`);\n        }\n        if (e.data.type === 'tray.configPopup.cancel') {\n            this.props.onClose();\n        }\n        if (e.data.type === 'tray.configPopup.ready') {\n            this.setState({ ready: true });\n        }\n        if (e.data.type === 'tray.configPopup.finish') {\n            this.props.onClose();\n        }\n    };\n\n    render() {\n        const styles = {\n            container: {\n                flex: 1,\n                position: 'relative',\n            },\n            iframe: {\n                width: '100%',\n                height: '100%',\n                minHeight: '500px',\n                border: '1px solid #2196f3',\n                borderRadius: '4px',\n                boxSizing: 'border-box',\n            },\n            loadingScreen: {\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                position: 'absolute',\n                background: 'white',\n                border: '1px solid #2196f3',\n                borderRadius: '4px',\n            }\n        };\n\n        return (\n            <div style={styles.container}>\n                <iframe\n                    ref={this.iframe}\n                    style={styles.iframe}\n                    src={this.props.src}\n                    title=\"Solution instance configurator\"\n                />\n                {!this.state.ready && <div style={styles.loadingScreen}>Loading...</div>}\n            </div>\n        )\n    }\n\n}\n\nexport default withTheme()(ConfigWizard);\n","export const openAuthWindow = (url) => {\n    // Must open window from user interaction code otherwise it is likely\n    // to be blocked by a popup blocker:\n    const authWindow = window.open(\n        undefined,\n        '_blank',\n        'width=500,height=500,scrollbars=no',\n    );\n\n    const onmessage = e => {\n        console.log('message', e.data.type, e.data);\n\n        if (e.data.type === 'tray.authPopup.error') {\n            // Handle popup error message\n            alert(`Error: ${e.data.error}`);\n            authWindow.close();\n        }\n        if (e.data.type === 'tray.authpopup.close' || e.data.type === 'tray.authpopup.finish') {\n            authWindow.close();\n        }\n    };\n    window.addEventListener('message', onmessage);\n\n    // Check if popup window has been closed\n    const CHECK_TIMEOUT = 1000;\n    const checkClosedWindow = () => {\n        if (authWindow.closed) {\n            window.removeEventListener('message', onmessage);\n        } else {\n            setTimeout(checkClosedWindow, CHECK_TIMEOUT);\n        }\n    }\n\n    checkClosedWindow();\n    authWindow.location = url;\n};\n","import Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport { withTheme } from \"@material-ui/core/styles/index\";\nimport React from 'react';\nimport Loading from './Loading';\nimport { get } from 'lodash';\n\nimport { openConfigWindow } from '../lib/configWindow';\n\nimport {\n    updateSolutionInstance,\n    updateSolutionInstanceConfig,\n    deleteSolutionInstance,\n} from '../api/solutions';\nimport {ConfigWizard} from \"./ConfigWizard\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {getAuthCreateUrl} from \"../api/me\";\nimport {openAuthWindow} from \"../lib/authWindow\";\n\nexport class Instance extends React.PureComponent {\n    state = {\n        error: false,\n        loading: false,\n        instanceState: undefined,\n        configWizardSrc: undefined,\n        authExternalId: undefined,\n        authUrlParams: ''\n    };\n\n    openWizard = (openInIframe, addCustomValidation = false) => {\n        updateSolutionInstanceConfig(this.props.id).then(({body}) => {\n            const url = addCustomValidation ? `${body.data.popupUrl}&customValidation=true` : body.data.popupUrl;\n\n            if (!openInIframe) {\n                const configWindow = openConfigWindow();\n                configWindow.location = url;\n            } else {\n                this.setState({\n                    configWizardSrc: url\n                })\n            }\n        });\n    };\n\n    onClickConfigure = () => {\n        this.openWizard(false,false);\n    };\n\n    onClickConfigureWithValidation = () => {\n        this.openWizard(false,true);\n    };\n\n    onClickConfigureInIframe = () => {\n        this.openWizard(true, false);\n    };\n\n    onClickEnable = () => {\n        const enabled = get(this.state, 'instanceState', this.props.enabled);\n        updateSolutionInstance(this.props.id, !enabled).then(()=>{\n            this.setState({instanceState: !enabled});\n        });\n    };\n\n    onClickDelete = () => {\n        deleteSolutionInstance(this.props.id).then(this.props.loadAllSolutionInstances);\n    }\n\n    closeIframe = () => {\n        this.setState({\n            configWizardSrc: undefined\n        })\n    };\n\n    onCreateAuth = () => {\n        getAuthCreateUrl(this.props.id, this.state.authExternalId)\n            .then(({body}) => {\n                openAuthWindow(`${body.data.popupUrl}&${this.state.authUrlParams}`);\n            })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        const {id, name} = this.props;\n        const {configWizardSrc} = this.state;\n\n        const enabled = get(this.state, 'instanceState', this.props.enabled);\n\n        const styles = {\n            controls: {\n                margin: \"10px\",\n                float: \"right\",\n                maxWidth: '400px'\n            },\n            pill: {\n                backgroundColor: enabled ? \"#7ebc54\" : \"#df5252\",\n                borderRadius: \"4px\",\n                marginRight: \"10px\",\n                color: \"white\",\n                padding: \"3px 5px\",\n            },\n            item: {\n                width: '100%',\n                border: 'none',\n            },\n            name: {\n                marginTop: '2px'\n            },\n            button: {\n                width: \"100%\",\n                marginBottom: \"10px\"\n            },\n            textFields: {\n                width: \"100%\",\n                margin: \"10px 0\",\n            }\n        };\n\n        return (\n            <Loading loading={this.state.loading}>\n                <ExpansionPanel\n                    key={id}\n                    style={styles.item}\n                >\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                        <span style={styles.pill}>\n                            {enabled ? \"enabled\" : \"disabled\"}\n                        </span>\n                        <Typography style={styles.name}>\n                            {name}\n                        </Typography>\n                    </ExpansionPanelSummary>\n\n                    <ExpansionPanelDetails>\n                        <div id=\"Controls\" style={styles.controls}>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickEnable}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                {enabled ? 'Disable' : 'Enable'}\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigure}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigureWithValidation}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure with custom validation\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigureInIframe}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure in iframe\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickDelete}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Delete\n                            </Button>\n                            <Typography variant=\"title\">\n                                Create auth\n                            </Typography>\n                            <TextField\n                                style={styles.textFields}\n                                label=\"Auth external id\"\n                                value={this.state.authExternalId}\n                                onChange={this.handleChange('authExternalId')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <TextField\n                                style={styles.textFields}\n                                label=\"Advanced Url Params\"\n                                value={this.state.authUrlParams}\n                                onChange={this.handleChange('authUrlParams')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <Button\n                                style={styles.button}\n                                onClick={this.onCreateAuth}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                disabled={!this.state.authExternalId}\n                            >\n                                Create auth\n                            </Button>\n                        </div>\n                        {configWizardSrc && <ConfigWizard src={configWizardSrc} onClose={this.closeIframe}/>}\n\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Loading>\n        );\n    }\n\n}\n\nexport default withTheme()(Instance);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport { withTheme } from '@material-ui/core/styles/index';\nimport Loading from '../components/Loading';\nimport Instance from '../components/Instance';\n\nimport { listSolutionInstances } from '../api/solutions';\n\nexport class SolutionsMine extends React.PureComponent {\n  styles = {\n    list: {\n      maxWidth: '1000px',\n      margin: 'auto',\n      marginBottom: '30px',\n      fontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n    },\n  };\n\n  state = {\n    loading: true,\n    error: false,\n    solutionInstances: [],\n  };\n\n  componentDidMount() {\n    this.loadAllSolutionInstances();\n  }\n\n  loadAllSolutionInstances = () => {\n    listSolutionInstances().then(({ ok, body }) => {\n      if (ok) {\n        this.setState({\n          solutionInstances: body.data,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          error: body,\n          loading: false,\n        });\n      }\n    });\n  };\n\n  buildList(solutionInstances) {\n    return (\n      // <div cla>\n      <div className=\"solutions-list\" style={this.styles.list}>\n        <Typography variant=\"headline\" style={{ margin: '20px 0' }}>\n          My Solution Instances\n        </Typography>\n        {solutionInstances.map(({ id, name, enabled }) => (\n          <Instance\n            id={id}\n            key={id}\n            name={name}\n            enabled={enabled}\n            loadAllSolutionInstances={this.loadAllSolutionInstances}\n          />\n        ))}\n      </div>\n      // </div>\n    );\n  }\n\n  render() {\n    return (\n      <View>\n        <Loading loading={this.state.loading}>\n          {this.state.error ? (\n            <Error msg={this.state.error} />\n          ) : (\n            this.buildList(this.state.solutionInstances)\n          )}\n        </Loading>\n      </View>\n    );\n  }\n}\n\nexport default withTheme()(SolutionsMine);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../components/Loading';\n\nimport { openConfigWindow } from '../lib/configWindow';\nimport { listSolutions, createSolutionInstance } from '../api/solutions';\n\nexport class SolutionsDiscover extends React.PureComponent {\n  state = {\n    loading: true,\n    error: false,\n    solutions: [],\n  };\n\n  componentDidMount() {\n    listSolutions().then(({ ok, body }) => {\n      if (ok) {\n        this.setState({\n          solutions: body.data,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          error: body,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  onUseWorkflowClick(id, name) {\n    const configWindow = openConfigWindow();\n\n    createSolutionInstance(id, name).then(({ body }) => {\n      // After we generate the popup URL, set it to the previously opened\n      // window:\n      configWindow.location = body.data.popupUrl;\n    });\n  }\n\n  buildList(solutions) {\n    const styles = {\n      controls: { marginLeft: '20px' },\n      button: { width: '100%' },\n      text: { fontWeight: 'bold' },\n      grid: {\n        maxWidth: '900px',\n        margin: '20px auto',\n      },\n      header: { margin: '20px' },\n      list: {\n        margin: '10px',\n        maxWidth: '1000px',\n        backgroundColor: 'white',\n      },\n    };\n\n    return (\n      <Grid item style={styles.grid}>\n        <Typography variant=\"headline\" style={styles.header}>\n          Discover solutions\n        </Typography>\n        <Paper className=\"solutions-list\">\n          <List style={styles.list}>\n            {solutions.map(({ title, id }, index) => (\n              <ListItem divider={index !== solutions.length - 1} key={index}>\n                <ListItemText style={styles.text} primary={title} secondary={null} />\n                <ListItemSecondaryAction onClick={() => this.onUseWorkflowClick(id, title)}>\n                  <Button style={styles.button} variant=\"outlined\" color=\"primary\">\n                    Use\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <View>\n        <Loading loading={this.state.loading}>\n          {this.state.error ? (\n            <Error msg={this.state.error} />\n          ) : (\n            this.buildList(this.state.solutions)\n          )}\n        </Loading>\n      </View>\n    );\n  }\n}\n\nexport default SolutionsDiscover;\n","import { withTheme } from \"@material-ui/core/styles/index\";\nimport React from \"react\";\n\nexport class AuthWizard extends React.PureComponent {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.iframe = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", this.handleIframeEvents);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.handleIframeEvents);\n  }\n\n  handleIframeEvents = (e) => {\n    console.log(`${e.data.type} event received`);\n    // Here we should handle all event types\n    if (e.data.type === \"tray.authPopup.error\") {\n      alert(`Error: ${e.data.error}`);\n    }\n    if (e.data.type === \"tray.authpopup.close\") {\n      this.props.onClose();\n    }\n    if (e.data.type === \"tray.authpopup.finish\") {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const styles = {\n      container: {\n        flex: 1,\n        position: \"relative\",\n      },\n      iframe: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: \"500px\",\n        border: \"1px solid #2196f3\",\n        borderRadius: \"4px\",\n        boxSizing: \"border-box\",\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        <iframe ref={this.iframe} style={styles.iframe} src={this.props.src} />\n      </div>\n    );\n  }\n}\n\nexport default withTheme()(AuthWizard);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withTheme } from '@material-ui/core/styles/index';\nimport Loading from '../components/Loading';\nimport { listAuths, getAuthEditUrl } from '../api/me';\nimport { openAuthWindow } from '../lib/authWindow';\nimport { getAuthCreateUrl } from '../api/me';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Grid from '@material-ui/core/Grid';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { AuthWizard } from '../components/AuthWizard';\n\nexport class Authentications extends React.PureComponent {\n  styles = {\n    controls: { marginLeft: '20px' },\n    button: { width: '100%' },\n    text: { fontWeight: 'bold' },\n    grid: {\n      maxWidth: '900px',\n      margin: '20px 20px',\n    },\n    header: { margin: '20px 0' },\n    headerOptions: { display: 'flex', margin: '0 0px 20px 0px' },\n    headerOption: { marginRight: '20px' },\n    list: {\n      margin: '10px',\n      maxWidth: '1000px',\n      backgroundColor: 'white',\n    },\n    advancedInput: {\n      marginRight: '20px',\n      flex: 1,\n    },\n  };\n\n  state = {\n    loading: true,\n    error: false,\n    auths: [],\n    params: '',\n    shouldOpenInFrame: false,\n    iframeURL: undefined,\n  };\n\n  componentDidMount() {\n    this.loadAuths();\n  }\n\n  loadAuths = () => {\n    this.setState(\n      {\n        loading: true,\n      },\n      () => {\n        listAuths().then(({ ok, body }) => {\n          if (ok) {\n            this.setState({\n              auths: body.data || [],\n              loading: false,\n            });\n          } else {\n            this.setState({\n              error: body,\n              loading: false,\n            });\n          }\n        });\n      }\n    );\n  };\n\n  openAuthWizard = (url) => {\n    if (this.state.shouldOpenInFrame) {\n      this.setState({ iframeURL: url });\n    } else {\n      openAuthWindow(url);\n    }\n  };\n\n  closeIframe = () => {\n    this.setState({ iframeURL: undefined });\n    this.loadAuths();\n  };\n\n  onCreateAuth = () => {\n    getAuthCreateUrl().then(({ body }) => {\n      this.openAuthWizard(`${body.data.popupUrl}&${this.state.params}`);\n    });\n  };\n\n  buildList() {\n    return (\n      <Paper>\n        <List style={this.styles.list}>\n          <Loading loading={this.state.loading}>\n            {this.state.auths.map(({ id, name }, index) => (\n              <ListItem divider={index !== this.state.auths.length - 1} key={index}>\n                <ListItemText style={this.styles.text} primary={name} secondary={null} />\n                <ListItemSecondaryAction onClick={this.showAuthWindow(id)}>\n                  <Button style={this.styles.button} variant=\"outlined\" color=\"primary\">\n                    Edit\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </Loading>\n        </List>\n      </Paper>\n    );\n  }\n\n  showAuthWindow = (id) => () => {\n    getAuthEditUrl(id).then(({ body }) => {\n      this.openAuthWizard(`${body.data.popupUrl}&${this.state.params}`);\n    });\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <Grid item style={this.styles.grid}>\n          <Grid container direction=\"column\">\n            <Typography variant=\"headline\" align=\"left\" style={this.styles.header}>\n              Authentications\n            </Typography>\n            <div className=\"authButtons\" style={this.styles.headerOptions}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={this.state.loading}\n                onClick={this.onCreateAuth}\n                style={this.styles.headerOption}\n              >\n                New\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={this.state.loading}\n                onClick={this.loadAuths}\n                style={this.styles.headerOption}\n              >\n                Refresh\n                <RefreshIcon />\n              </Button>\n              <TextField\n                id=\"params\"\n                label=\"Advanced Url Params\"\n                value={this.state.params}\n                onChange={this.handleChange('params')}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={this.styles.advancedInput}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    value={this.state.shouldOpenInFrame}\n                    onChange={({ target: { checked } }) => {\n                      this.setState({ shouldOpenInFrame: checked });\n                    }}\n                  />\n                }\n                label=\"Open in iframe\"\n              />\n            </div>\n          </Grid>\n          {this.state.error ? (\n            <Error msg={this.state.error} />\n          ) : (\n            <>\n              {this.state.iframeURL && (\n                <AuthWizard src={this.state.iframeURL} onClose={this.closeIframe} />\n              )}\n              {this.buildList()}\n            </>\n          )}\n        </Grid>\n      </View>\n    );\n  }\n}\n\nexport default withTheme()(Authentications);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { PrivateRoute, RedirectMain } from './components/auth/Auth';\n\nimport Demo from './views/Demo';\nimport Account from './views/Account';\nimport SolutionsMine from './views/SolutionsMine';\nimport SolutionsDiscover from './views/SolutionsDiscover';\nimport Authentications from './views/Authentications';\n\nconst App = () => (\n  <Router>\n    <div className=\"app-container\">\n      <Switch>\n        <RedirectMain exact from=\"/\" />\n      </Switch>\n      {/* <Route path=\"/demo\" component={Demo} /> */}\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <PrivateRoute path=\"/account\" component={Account} />\n      <PrivateRoute path=\"/solutions/discover\" component={SolutionsDiscover} />\n      <PrivateRoute path=\"/solutions/mine\" component={SolutionsMine} />\n      <PrivateRoute path=\"/authentications\" component={Authentications} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './Router';\n// import registerServiceWorker from './registerServiceWorker';\nimport blue from '@material-ui/core/colors/blue';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: blue,\n  },\n});\n\nReactDOM.render(\n  <div className=\"index-wrapper\">\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </BrowserRouter>\n  </div>,\n  document.getElementById('root')\n);\n\n// registerServiceWorker();\n","let url =\r\n  window.location.hostname === 'localhost'\r\n    ? 'http://localhost:3001'\r\n    : 'https://seashell-app-ixpn3.ondigitalocean.app';\r\n\r\nexports.baseUrl = url;\r\n"],"sourceRoot":""}